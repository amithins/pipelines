resources:
  - name: connecting_resource
    type: PropertyBag
    configuration:
      key1: value1
      key2: value2
      
  - name: ns_dockerbuild_gitRepo
    type: GitRepo
    configuration:
      path: vishnurao12/sample-script
      gitProvider: git_v
      branches: 
        include: master
        
  - name: res_bundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: distribution_v
      name: test_123
      version: ${run_number}
      
  - name: sig_bundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: distribution_v
      name: test_123
      version: ${run_number}
      
  - name: ns_promotedInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: art_v
      buildName: master_test_promotedInfo
      buildNumber: 1

  - name: ns_buildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: art_v
      buildName: master_test_buildInfo
      buildNumber: 1514
 
 
  - name:       out_image
    type:      Image
    configuration:
      registry:            art_v
      sourceRepository:    image-docker   # required if registry is Artifactory

      imageName:           wtl12.jfrog.info/docker-local/node
      imageTag:            ${run_number}
      
  - name: my_distributionRule
    type: DistributionRule
    configuration:
      sourceDistribution: distribution_v
      serviceName: "*"
      siteName: "*"
      cityName: "*"
      countryCodes:
        - DE


pipelines:
  - name: docker_push

    steps:
      - name: To_build_Docker_Image
        type: DockerBuild
        configuration:
          affinityGroup: "BasicTest"
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: test64621.jfrogdev.org/docker-local/node
          
          dockerImageTag: ${run_number}
          integrations:
            - name: art_v

          inputResources:
            - name: ns_dockerbuild_gitRepo 
            - name: connecting_resource


      - name: To_Push_Docker_Image
        type: DockerPush
        configuration:
          affinityGroup: "BasicTest"
          autoPublishBuildInfo: true 
          forceXrayScan:        true
          failOnScan:           false
          targetRepository: docker-local #required
          integrations:
            - name: art_v 
          inputSteps:
            - name: To_build_Docker_Image
          outputResources:
            - name: ns_buildInfo
            - name: out_image
            
               
#       - name: To_publish_buildInfo 
#         type: PublishBuildInfo
#         configuration:
#           inputSteps:
#             - name: To_Push_Docker_Image
#           outputResources:
#             - name: ns_buildInfo

      - name: To_promote_build
        type: PromoteBuild
        configuration:
          targetRepository: test-generic-local
          integrations:
            - name: art_v
          inputResources:
            - name: ns_buildInfo
          inputSteps:
            - name: To_Push_Docker_Image
          outputResources:
            - name: ns_promotedInfo

      - name: docker_releaseBundle
        type: CreateReleaseBundle
        configuration:
          #inherits from bash
          releaseBundleName:        test_123
          releaseBundleVersion:     ${run_number}
          inputResources:
            - name: ns_promotedInfo
          outputResources:
            - name: res_bundle
          dryRun: false

          
      - name: docker_sign_releaseBundle
        type: SignReleaseBundle
        configuration:
          inputResources:
            - name:            res_bundle
          outputResources:
            - name:            sig_bundle
            
      - name: my_distribute
        type: DistributeReleaseBundle
        configuration:
          dryRun: false                # optional
          inputResources:
            - name: sig_bundle    # one ReleaseBundle is required  
            - name: my_distributionRule   # one DistributionRule is required
              
